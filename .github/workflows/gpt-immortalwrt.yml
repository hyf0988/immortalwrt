name: Build ImmortalWrt x86_64 (manual)

on:
  workflow_dispatch:
    inputs:
      immortal_branch:
        description: 'ImmortalWrt branch or tag to build (e.g. master or releases/24.10.3)'
        required: true
        default: 'master'
      overlay_mb:
        description: 'Rootfs/overlay size in MB (e.g. 2048)'
        required: true
        default: '2048'
      extra_packages:
        description: 'Extra packages (space separated). Example: "luci luci-i18n-zh-cn luci-theme-argon"'
        required: false
        default: 'luci luci-i18n-zh-cn luci-theme-argon openssh-sftp-server block-mount kmod-fs-ext4 kmod-fs-vfat kmod-fs-ntfs ntfs-3g'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      CPU_COUNT: ${{ runner.cores }}
      IMMORTAL_BRANCH: ${{ github.event.inputs.immortal_branch }}
      ROOTFS_PARTSIZE: ${{ github.event.inputs.overlay_mb }}
    steps:
      - name: Checkout this repo (workflow + local files)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses5-dev gawk git gettext libssl-dev xsltproc \
            libxml-parser-perl unzip python3 python3-distutils zlib1g-dev file mercurial quilt ccache \
            gcc-multilib g++-multilib subversion asciidoc binutils bzip2

      - name: Cache downloads (ccache & feeds downloads)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache
            /home/runner/.ccache
            # immortalwrt downloads and feeds cache
            ${{ github.workspace }}/downloads
          key: build-immortalwrt-cache-${{ runner.os }}-${{ env.IMMORTAL_BRANCH }}-${{ hashFiles('**/feeds.conf*') }}
          restore-keys: |
            build-immortalwrt-cache-${{ runner.os }}-${{ env.IMMORTAL_BRANCH }}-

      - name: Clone ImmortalWrt source
        run: |
          git clone --depth 1 https://github.com/immortalwrt/immortalwrt.git immortalwrt
          cd immortalwrt
          git fetch --tags
          git checkout "${IMMORTAL_BRANCH}" || true
          echo "Checked out $(git rev-parse --short HEAD) on branch ${IMMORTAL_BRANCH}"

      - name: Add community feeds (passwall, openclash, homeproxy, argon theme)
        run: |
          cd immortalwrt
          # back up original feeds.conf.default
          cp feeds.conf.default feeds.conf.default.bak || true
          cat >> feeds.conf.default <<'EOF'
src-git packages https://github.com/immortalwrt/packages
src-git luci https://github.com/immortalwrt/luci
# community feeds for passwall / openclash / argon / homeproxy
src-git openwrt-passwall https://github.com/xiaorouji/openwrt-passwall
src-git openclash https://github.com/vernesong/OpenClash
src-git jerrykuku-theme-argon https://github.com/jerrykuku/luci-theme-argon
src-git homeproxy https://github.com/immortalwrt/homeproxy
EOF
          cat feeds.conf.default

      - name: Update & install feeds
        run: |
          cd immortalwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a || true

      - name: Create default config and set target to x86/64
        run: |
          cd immortalwrt
          # create base defconfig for x86_64 generic (no GUI interaction)
          make defconfig
          # ensure target is x86_64 generic; use environment variables to pass to make image later
          # We keep .config flexible and pass PACKAGES + ROOTFS_PARTSIZE to 'make image' step.

      - name: Build image (image + packages)
        env:
          PACKAGES: ${{ github.event.inputs.extra_packages }}
        run: |
          cd immortalwrt
          echo "Building with PACKAGES='${PACKAGES}', ROOTFS_PARTSIZE=${ROOTFS_PARTSIZE}"
          # Use make image with PROFILE=generic (x86/64) and pass ROOTFS_PARTSIZE
          # Note: You can adjust PROFILE if you want ISO/EFI/legacy builds.
          make -j$(nproc) image PROFILE="generic" PACKAGES="${PACKAGES}" CONFIG_TARGET_ROOTFS_PARTSIZE=${ROOTFS_PARTSIZE} V=s || { echo "Build failed"; exit 1; }

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt-x86_64-images
          path: |
            immortalwrt/bin/targets/x86/64/*.img
            immortalwrt/bin/targets/x86/64/*.iso
            immortalwrt/bin/targets/x86/64/packages/
