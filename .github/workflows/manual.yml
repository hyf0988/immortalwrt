# This is a basic workflow that is manually triggered

name: Build ImmortalWrt 23.05.3 with Custom Packages

# 手动触发工作流
on:
  workflow_dispatch:
    inputs:
      target_device:
        description: 'Target device (e.g., x86_64, rpi-4)'
        required: true
        default: 'x86_64'

env:
  IMMORTALWRT_VERSION: '23.05.3'
  REPO_URL: 'https://github.com/immortalwrt/immortalwrt'
  REPO_BRANCH: 'openwrt-23.05'
  ROOTFS_PARTSIZE: '3072'  # 设置软件包空间为 3GB (单位：MB)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 检出代码
      - name: Checkout
        uses: actions/checkout@v3

      # 设置构建环境
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential ccache curl file g++ gawk \
            git libncurses5-dev libssl-dev python3 unzip zlib1g-dev

      # 下载 ImmortalWrt 源码
      - name: Clone ImmortalWrt Source
        run: |
          git clone --depth 1 -b ${{ env.REPO_BRANCH }} ${{ env.REPO_URL }} immortalwrt
          cd immortalwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      # 自定义配置
      - name: Customize configuration
        run: |
          cd immortalwrt
          # 下载并添加所需软件包
          git clone https://github.com/vernesong/OpenClash.git package/openclash
          git clone https://github.com/xiaorouji/openwrt-passwall.git package/passwall
          git clone https://github.com/immortalwrt/homeproxy.git package/homeproxy
          git clone https://github.com/lisaac/luci-app-dockerman.git package/dockerman
          
          # 添加 2.5G 网卡驱动支持（以 Realtek RTL8125 为例）
          echo "CONFIG_PACKAGE_kmod-r8169=y" >> .config
          echo "CONFIG_PACKAGE_kmod-usb-net-rtl8152=y" >> .config

          # 添加 SFTP 支持
          echo "CONFIG_PACKAGE_openssh-sftp-server=y" >> .config

          # 添加 Argo 主题
          git clone https://github.com/kenzok8/luci-theme-argon.git package/luci-theme-argon

          # 设置默认软件包空间大小 (通过修改根文件系统分区大小)
          sed -i 's/CONFIG_TARGET_ROOTFS_PARTSIZE=.*/CONFIG_TARGET_ROOTFS_PARTSIZE=${{ env.ROOTFS_PARTSIZE }}/' .config

          # 启用 Docker 支持
          echo "CONFIG_PACKAGE_luci-app-dockerman=y" >> .config
          echo "CONFIG_PACKAGE_docker=y" >> .config
          echo "CONFIG_PACKAGE_dockerd=y" >> .config

          # 生成默认配置
          make defconfig

      # 编译固件
      - name: Build Firmware
        run: |
          cd immortalwrt
          make -j$(nproc) V=s

      # 上传固件
      - name: Upload Firmware
        uses: actions/upload-artifact@v3
        with:
          name: immortalwrt-firmware-${{ github.event.inputs.target_device }}
          path: immortalwrt/bin/targets/*/*/immortalwrt-*.bin
