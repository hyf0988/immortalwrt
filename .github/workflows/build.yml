name: Build ImmortalWrt 24.10.2 Stable with PassWall2

on:
  workflow_dispatch:
    inputs:
      make_threads:
        description: 'Compilation threads'
        required: true
        default: '1'
        type: choice
        options:
        - '1'
        - '2'
      minimal_build:
        description: 'Build minimal version (faster, smaller)'
        required: true
        default: 'true'
        type: boolean

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  REPO_VERSION: v24.10.2
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Aggressive disk cleanup
      run: |
        echo "=== Initial system status ==="
        df -h
        free -h
        
        # Remove large unnecessary packages
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo rm -rf /opt/hostedtoolcache /usr/local/share/boost
        sudo rm -rf /usr/local/lib/python* /usr/lib/jvm/*
        sudo rm -rf /usr/share/swift /usr/share/vim /usr/share/postgresql
        sudo rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
        sudo rm -rf /usr/local/share/powershell /usr/share/man
        
        # Clean package cache
        sudo apt-get clean
        sudo apt-get autoclean
        
        # Disable swap completely
        sudo swapoff -a
        sudo rm -f /swapfile /mnt/swapfile
        
        echo "=== After cleanup ==="
        df -h
        free -h

    - name: Checkout
      uses: actions/checkout@v4

    - name: Install minimal dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        # Update package list
        sudo apt-get update -qq
        
        # Install minimal build dependencies
        sudo apt-get install -y --no-install-recommends \
          build-essential ccache curl file g++ gawk git \
          libncurses5-dev libssl-dev python3 unzip zlib1g-dev \
          subversion m4 flex bison python3-distutils
        
        # Clean up immediately
        sudo apt-get autoremove --purge -y
        sudo apt-get clean
        sudo rm -rf /var/lib/apt/lists/*
        
        # Set timezone
        sudo timedatectl set-timezone "$TZ"
        
        echo "=== Dependencies installed ==="
        df -h

    - name: Clone ImmortalWrt Source
      run: |
        echo "=== Cloning ImmortalWrt source ==="
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        git checkout $REPO_VERSION
        
        echo "=== Updating feeds ==="
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
        echo "=== Source ready ==="
        du -sh . || true

    - name: Configure build (with PassWall2)
      run: |
        cd openwrt
        
        # Create optimized config based on build type
        if [ "${{ github.event.inputs.minimal_build }}" == "true" ]; then
          echo "=== Generating minimal config with PassWall2 ==="
          cat > .config <<EOF
        # Target system
        CONFIG_TARGET_x86=y
        CONFIG_TARGET_x86_64=y
        CONFIG_TARGET_x86_64_DEVICE_generic=y
        
        # Basic LuCI
        CONFIG_PACKAGE_luci=y
        CONFIG_LUCI_LANG_zh_Hans=y
        
        # Proxy applications
        CONFIG_PACKAGE_luci-app-openclash=y
        CONFIG_PACKAGE_luci-app-homeproxy=y
        CONFIG_PACKAGE_luci-app-passwall=y
        CONFIG_PACKAGE_luci-app-passwall2=y
        CONFIG_PACKAGE_luci-i18n-passwall2-zh-cn=y
        
        # PassWall2 core components
        CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Shadowsocks_Libev_Client=y
        CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Xray=y
        CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Hysteria=y
        
        # Docker (minimal)
        CONFIG_PACKAGE_luci-app-dockerman=y
        CONFIG_PACKAGE_docker-ce=y
        CONFIG_DOCKER_CGROUP_OPTIONS=y
        CONFIG_KERNEL_CGROUP_DEVICE=y
        CONFIG_KERNEL_CGROUP_FREEZER=y
        
        # Essential network drivers
        CONFIG_PACKAGE_kmod-igc=y      # Intel I226
        CONFIG_PACKAGE_kmod-r8169=y    # Realtek 1G
        CONFIG_PACKAGE_kmod-r8125=y    # Realtek 2.5G
        
        # Minimal partitions
        CONFIG_TARGET_KERNEL_PARTSIZE=32
        CONFIG_TARGET_ROOTFS_PARTSIZE=1024
        CONFIG_TARGET_ROOTFS_EXT4FS=y
        CONFIG_CCACHE=y
        EOF
        else
          echo "=== Generating full config with PassWall2 ==="
          cat > .config <<EOF
        # Target system
        CONFIG_TARGET_x86=y
        CONFIG_TARGET_x86_64=y
        CONFIG_TARGET_x86_64_DEVICE_generic=y
        
        # Basic system
        CONFIG_PACKAGE_luci=y
        CONFIG_LUCI_LANG_zh_Hans=y
        CONFIG_PACKAGE_luci-theme-material=y
        
        # All proxy applications
        CONFIG_PACKAGE_luci-app-openclash=y
        CONFIG_PACKAGE_luci-i18n-openclash-zh-cn=y
        CONFIG_PACKAGE_luci-app-homeproxy=y
        CONFIG_PACKAGE_luci-i18n-homeproxy-zh-cn=y
        CONFIG_PACKAGE_luci-app-passwall=y
        CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Xray=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Hysteria=y
        CONFIG_PACKAGE_luci-app-passwall2=y
        CONFIG_PACKAGE_luci-i18n-passwall2-zh-cn=y
        CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Shadowsocks_Libev_Client=y
        CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Xray=y
        CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Hysteria=y
        CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Sing_Box=y
        
        # Docker support
        CONFIG_PACKAGE_luci-app-dockerman=y
        CONFIG_PACKAGE_luci-i18n-dockerman-zh-cn=y
        CONFIG_PACKAGE_docker-ce=y
        CONFIG_PACKAGE_docker-compose=y
        CONFIG_DOCKER_CGROUP_OPTIONS=y
        CONFIG_DOCKER_NET_MACVLAN=y
        CONFIG_DOCKER_STO_EXT4=y
        
        # Full network drivers
        CONFIG_PACKAGE_kmod-igc=y      # Intel I226 2.5G
        CONFIG_PACKAGE_kmod-igb=y      # Intel 1G
        CONFIG_PACKAGE_kmod-e1000e=y   # Intel 1G
        CONFIG_PACKAGE_kmod-r8169=y    # Realtek 1G
        CONFIG_PACKAGE_kmod-r8125=y    # Realtek 2.5G
        CONFIG_PACKAGE_kmod-i40e=y     # Intel 10G
        
        # Full kernel support
        CONFIG_KERNEL_CGROUP_DEVICE=y
        CONFIG_KERNEL_CGROUP_FREEZER=y
        CONFIG_KERNEL_CGROUP_NET_PRIO=y
        CONFIG_KERNEL_EXT4_FS_POSIX_ACL=y
        CONFIG_KERNEL_FS_POSIX_ACL=y
        CONFIG_KERNEL_NET_CLS_CGROUP=y
        
        # Larger partitions for full build
        CONFIG_TARGET_KERNEL_PARTSIZE=64
        CONFIG_TARGET_ROOTFS_PARTSIZE=2048
        CONFIG_TARGET_ROOTFS_EXT4FS=y
        CONFIG_CCACHE=y
        
        # Additional utilities
        CONFIG_PACKAGE_wget-ssl=y
        CONFIG_PACKAGE_curl=y
        CONFIG_PACKAGE_htop=y
        CONFIG_PACKAGE_nano=y
        EOF
        fi
        
        echo "=== Configuration generated ==="
        echo "Config size: $(wc -l < .config) lines"
