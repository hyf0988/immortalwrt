name: Build Latest ImmortalWrt 24.10

on:
  workflow_dispatch:   # 手动触发构建

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Init Environment and Free Disk Space
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        # Free up disk space by removing large, pre-installed tools.
        echo "Initial free space:"
        df -h
        sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /usr/local/share/powershell
        echo "Space after cleaning:"
        df -h
        
        # Install build dependencies
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/immortalwrt/immortalwrt/openwrt-24.10/scripts/buildsystem/dependencies-ubuntu-2204)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"

    - name: Clone Source Code
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Generate Config File
      run: |
        cd openwrt
        cat > .config <<EOF
        # Target System
        CONFIG_TARGET_x86=y
        CONFIG_TARGET_x86_64=y
        CONFIG_TARGET_x86_64_DEVICE_generic=y

        # Partition Size Settings
        CONFIG_TARGET_KERNEL_PARTSIZE=32
        CONFIG_TARGET_ROOTFS_PARTSIZE=2048

        # Basic LuCI Applications
        CONFIG_PACKAGE_luci=y
        CONFIG_PACKAGE_luci-app-openclash=y
        CONFIG_PACKAGE_luci-app-homeproxy=y
        CONFIG_PACKAGE_luci-app-passwall=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Xray=y
        CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Hysteria=y

        # Dockerman and Dependencies
        CONFIG_PACKAGE_luci-app-dockerman=y
        CONFIG_PACKAGE_luci-i18n-dockerman-zh-cn=y
        CONFIG_PACKAGE_docker-ce=y
        CONFIG_PACKAGE_luci-lib-docker=y
        CONFIG_PACKAGE_docker-compose=y

        # Docker Kernel Options
        CONFIG_DOCKER_CGROUP_OPTIONS=y
        CONFIG_DOCKER_NET_MACVLAN=y
        CONFIG_DOCKER_STO_EXT4=y
        CONFIG_DOCKER_OPTIONAL_FEATURES=y
        CONFIG_DOCKER_NET_ENCRYPT=y
        CONFIG_DOCKER_NET_OVERLAY=y
        CONFIG_DOCKER_NET_TFTP=y
        CONFIG_KERNEL_CGROUP_DEVICE=y
        CONFIG_KERNEL_CGROUP_FREEZER=y
        CONFIG_KERNEL_CGROUP_NET_PRIO=y
        CONFIG_KERNEL_EXT4_FS_POSIX_ACL=y
        CONFIG_KERNEL_EXT4_FS_SECURITY=y
        CONFIG_KERNEL_FS_POSIX_ACL=y
        CONFIG_KERNEL_NET_CLS_CGROUP=y
        CONFIG_KERNEL_MEMCG_SWAP=y
        CONFIG_KERNEL_MEMCG_SWAP_ENABLED=y
        CONFIG_KERNEL_CGROUP_PERF=y
        CONFIG_KERNEL_CGROUP_HUGETLB=y
        CONFIG_KERNEL_PROC_PID_CPUSET=y
        
        # Wired Network Drivers
        CONFIG_PACKAGE_kmod-igb=y
        CONFIG_PACKAGE_kmod-e1000e=y
        CONFIG_PACKAGE_kmod-r8169=y
        CONFIG_PACKAGE_kmod-r8125=y
        CONFIG_PACKAGE_kmod-igc=y
        
        # USB Support
        CONFIG_PACKAGE_kmod-usb-core=y
        CONFIG_PACKAGE_kmod-usb-hid=y
        CONFIG_PACKAGE_kmod-usb2=y
        CONFIG_PACKAGE_kmod-usb2-pci=y
        CONFIG_PACKAGE_kmod-usb3=y
        
        # Filesystem Support
        CONFIG_PACKAGE_kmod-fs-ext4=y
        CONFIG_PACKAGE_kmod-fs-ntfs=y
        CONFIG_PACKAGE_kmod-fs-vfat=y
        CONFIG_PACKAGE_ntfs-3g=y
        EOF

    - name: Download Package
      run: |
        cd openwrt
        make defconfig
        make download -j8

    - name: Compile Firmware
      run: |
        cd openwrt
        make -j$(nproc) || make -j1 V=s

    - name: Upload Artifacts
      uses: actions/upload-artifact@main
      with:
        name: immortalwrt-24.10-firmware
        path: openwrt/bin/targets/

    - name: Generate Release Tag
      id: tag
      run: |
        echo "release_tag=24.10-$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        echo "release_date=$(date +"%Y.%m.%d")" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        name: ImmortalWrt_24.10_${{ steps.tag.outputs.release_date }}
        files: openwrt/bin/targets/*/*/*
        draft: false
        prerelease: false
